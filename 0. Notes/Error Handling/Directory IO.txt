// You can edit this code!
// Click here and start typing.
package main

import (
	"errors"
	"fmt"
	"log"
	"os"
	"path/filepath"
)

func main() {
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	//creating a subdirectory

	//search for subdir
	d, err := os.Stat("subdir")
	fmt.Println("error returned by o.Stat() is: ", err)

	//if there is already a subdir with this name, log error
	if err == nil {
		fmt.Println(d.Mode(), d.isDir())
		log.Fatal("file/dir name already exists")
	}

	//else if there is not any dir, create one
	if errors.Is(err, os.ErrNotExist) {
		//creates new dir in current dir
		err := MkdirAll("subdir", 0777) //0777 means full permission for anybody
		if err != nil {
			log.Fatal(err)
		}
		fmt.Println("subdir directory created")
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////////
	//MkdirAll neste dirs

	//join combines an arbitrary nr of elements into a single path
	p := filepath.Join("../test", "subdir1", "subdir2") // => test/subdir1/subdir2
	err := os.MkdirAll(p, 0777)                         //make dir with the path and permissions
	if err != nil {
		log.Fatal(err)
	}
	fmt.Println("nested directory created")
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	//read dir list files
	
	//read dir returns a list of file entries from directory
	ls, err := ReadDir("../demo")
	if err != nil {
		log.Fatal(err)
	}
	for _, f := range ls {
		fmt.Println(f.Name, f.IsDir())
	}
}